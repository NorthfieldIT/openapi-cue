{
  "openapi": "3.0.0",
  "info": {
    "title": "Connected Ship Configuration",
    "version": "1.0.0",
    "description": "Start with the service schema"
  },
  "paths": {},
  "components": {
    "schemas": {
      "Backend": {
        "type": "object",
        "required": [
          "host",
          "port",
          "probe"
        ],
        "properties": {
          "host": {
            "description": "Hostname or IP - this must be resolvable when Varnish boots up or it will crash",
            "type": "string"
          },
          "port": {
            "type": "integer",
            "minimum": 0
          },
          "type": {
            "type": "string"
          },
          "first_byte_timeout": {
            "type": "string",
            "pattern": "^\\d+[s,m]$"
          },
          "connect_timeout": {
            "type": "string",
            "pattern": "^\\d+[s,m]$"
          },
          "between_bytes_timeout": {
            "type": "string",
            "pattern": "^\\d+[s,m]$"
          },
          "probe": {
            "description": "### Probe configures the health check of this backend by periodically sending a request to test if the backend is answering and thus \"healthy\".",
            "type": "object",
            "required": [
              "url",
              "timeout",
              "interval",
              "window",
              "initial",
              "expected_response",
              "threshold"
            ],
            "properties": {
              "url": {
                "description": "What URL should varnish request (/health).",
                "type": "string"
              },
              "timeout": {
                "description": "What is the timeout of the probe",
                "type": "string",
                "pattern": "^\\d+[s,m]$"
              },
              "interval": {
                "description": "How often should we poll",
                "type": "string",
                "pattern": "^\\d+[s,m]$"
              },
              "window": {
                "description": "The number of probe results in the sliding window",
                "type": "integer",
                "minimum": 0
              },
              "initial": {
                "description": "How many of the of the probes a good when Gateway starts.",
                "type": "integer",
                "minimum": 0
              },
              "expected_response": {
                "type": "integer",
                "minimum": 0
              },
              "threshold": {
                "description": "How many of the .window last polls must be good for the backend to be declared healthy.",
                "type": "integer"
              }
            }
          }
        }
      },
      "Method": {
        "type": "string",
        "enum": [
          "GET",
          "POST",
          "OPTIONS",
          "PUT",
          "DELETE",
          "HEAD"
        ]
      },
      "Rule": {
        "type": "object",
        "required": [
          "name",
          "path_regex",
          "method",
          "fallback"
        ],
        "properties": {
          "name": {
            "description": "An identifier and short description",
            "type": "string"
          },
          "path_regex": {
            "description": "How the rule is triggered",
            "type": "string"
          },
          "method": {
            "$ref": "#/components/schemas/Method"
          },
          "cookies": {
            "description": "if defined, \"all\" strips all cookies",
            "type": "object",
            "properties": {
              "strip": {
                "type": "string",
                "enum": [
                  "all"
                ]
              }
            }
          },
          "tags": {
            "description": "### Tags that will be logged with all requests that hit this rule\n### Tags are logged as key value pairs in the following format:\n`key1:val1,key2:val2`\n### Colons (:) and commas (,) are reserved characters that will be removed prior to logging",
            "type": "object"
          },
          "vary": {
            "description": "Vary the cache on the sum of the value of these headers.",
            "type": "array",
            "items": {}
          },
          "auth": {
            "description": "### TODO",
            "type": "object"
          },
          "cache": {
            "description": "### TODO",
            "type": "object",
            "required": [
              "mode"
            ],
            "properties": {
              "mode": {
                "type": "string"
              },
              "ttl": {
                "type": "string"
              },
              "grace": {
                "type": "string"
              }
            }
          },
          "fallback": {
            "type": "object",
            "properties": {
              "headers": {
                "type": "object"
              }
            }
          }
        }
      },
      "Service": {
        "description": "### To configure Connected Ship, fill in all required fields.",
        "type": "object",
        "required": [
          "name",
          "priority",
          "hostname_regex",
          "suppress_log",
          "backend",
          "rules"
        ],
        "properties": {
          "name": {
            "description": "The name of the service. This must be the same as the yml filename - why would you want it to not match? Are you some kind of animal?",
            "type": "string",
            "pattern": "^[a-z]+$"
          },
          "priority": {
            "description": "Priority controls the ordering of the host header matching. Only applicable if you have multiple services. Lower numbers get rendered first.",
            "type": "number",
            "maximum": 100,
            "exclusiveMaximum": true
          },
          "hostname_regex": {
            "description": "Regex of host header values that will be routed to this service",
            "type": "string"
          },
          "suppress_log": {
            "description": "Paths to suppress logs, such as for healthchecks or monitoring. Multiple values accepted",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "enable_503_troubleshooting_ui": {
            "type": "boolean"
          },
          "backend": {
            "$ref": "#/components/schemas/Backend"
          },
          "rules": {
            "description": "### Here we define the 'rules' - routed by request url path.\n### Rules get processed from top to bottom and the first match wins.\n### Recommended to have the most specific rules at the top",
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/components/schemas/Rule"
            }
          },
          "snippets": {
            "description": "### TODO",
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/components/schemas/Snippet"
            }
          }
        }
      },
      "Snippet": {
        "type": "object",
        "required": [
          "name",
          "sub",
          "vcl"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "sub": {
            "type": "string",
            "enum": [
              "recv",
              "deliver",
              "backend_fetch"
            ]
          },
          "vcl": {
            "type": "string"
          }
        }
      }
    }
  }
}